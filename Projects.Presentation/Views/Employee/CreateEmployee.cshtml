@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Projects.DataAccess.Database
@using Projects.Presentation.Models.Auth
@model Projects.Presentation.Models.Employees.CreateEmployeeDto
@inject UserManager<ApplicationUser> UserManager;

@{
    Layout = null;
}

@{
    var user = await UserManager.GetUserAsync(User);
    bool isAdmin = user != null && await UserManager.IsInRoleAsync(user, "Admin");
}

<!DOCTYPE html>

<html lang="en">
<head>
    <title>Add new employee</title>
</head>
<body>
<form asp-controller="Employee" asp-action="CreateEmployee" method="post">
    @Html.AntiForgeryToken()
    <div>
        <label>First name</label>
        <input asp-for="FirstName"/>
        <span asp-validation-for="FirstName"></span>
    </div>
    <div>
        <label>Middle name</label>
        <input asp-for="MiddleName"/>
        <span asp-validation-for="MiddleName"></span>
    </div>
    <div>
        <label>Last name</label>
        <input asp-for="LastName"/>
        <span asp-validation-for="LastName"></span>
    </div>
    <div>
        <label>Mail</label>
        <input asp-for="Mail"/>
        <span asp-validation-for="Mail"></span>
    </div>
    <div>
        <label>Password</label>
        <input asp-for="Password"/>
        <span asp-validation-for="Password"></span>
    </div>
    <div>
        <label>Confirm password</label>
        <input asp-for="ConfirmPassword"/>
        <span asp-validation-for="ConfirmPassword"></span>
    </div>
    
    @if (isAdmin)
    {
        <div>
            <label>Role</label>
            <select asp-for="Role" asp-items="@(new SelectList(new[] { Roles.Director, Roles.Manager, Roles.Employee }))">
            </select>
            <span asp-validation-for="Role"></span>
        </div>
    }

    <div>
        <input type="submit" value="Add"/>
    </div>
</form>
</body>
</html>