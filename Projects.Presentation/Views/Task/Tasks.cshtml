@using Microsoft.AspNetCore.Identity
@using Projects.DataAccess.Database
@using Projects.DataAccess.Models
@using TaskStatus = Projects.DataAccess.Models.Tasks.TaskStatus
@model Projects.Presentation.Models.Tasks.TasksViewModel
@inject UserManager<ApplicationUser> UserManager;

@{ 
    Layout = null;
    var user = await UserManager.GetUserAsync(User);
    var isAdmin = user != null && await UserManager.IsInRoleAsync(user, Roles.Admin);
    var isDirector = user != null && await UserManager.IsInRoleAsync(user, Roles.Director);
    var isManager = user != null && await UserManager.IsInRoleAsync(user, Roles.Manager);
}

<!DOCTYPE html>

<html lang="en">
<head>
    <title>Tasks</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.3/themes/smoothness/jquery-ui.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.3/jquery-ui.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/css/styles.css"/>
</head>
<body>
    <h1>Filters</h1>

    <form id="filterForm">
        <div class="block">
            <label>Priority </label>
            <input asp-for="PriorityFilter.PriorityFrom" class="form-control width50px" />
            <span asp-validation-for="PriorityFilter.PriorityFrom"></span>

            <label> - </label>
            <input asp-for="PriorityFilter.PriorityTo" class="form-control width50px" />
            <span asp-validation-for="PriorityFilter.PriorityTo"></span>
        </div>

        <div class="block">
            <label>Status </label>
            @{
                var items = new List<SelectListItem> { new() { Value = "", Text = "Select a status", Selected = true } };
                items.AddRange(Html.GetEnumSelectList<TaskStatus>());
            }
            <select asp-for="StatusFilter.Status" asp-items="items"></select>
            <span asp-validation-for="StatusFilter.Status"></span>
        </div>

        <input type="hidden" asp-for="ProjectId" value="@Model.ProjectId"/>
        <input type="hidden" asp-for="ShowDeleteAndAddButtons" value="@Model.ShowDeleteAndAddButtons"/>
        <input type="hidden" id="sortBy" value="" asp-for="SortBy" />
        <input type="hidden" id="sortOrder" value="asc" asp-for="SortOrder" />

        <div class="block">
            <button type="submit" class="base-button">Apply</button>
        </div>
    </form>

    <h1>Tasks</h1>

    <div id="tasksTable" class="block">
        @if (isAdmin || isDirector || isManager)
        {
            @(await Html.PartialAsync("_TaskTableWithDelete", Model))
        }
        else
        {
            @(await Html.PartialAsync("_TaskTable", Model))
        }
    </div>

    <script>
        $(document).ready(function () {
            $("#filterForm").submit(function (e) {
                e.preventDefault();

                $.get('/Task/Tasks', $(this).serialize(), function (data) {
                    $('#tasksTable').html(data);
                });
            });

            window.sort = function (sortBy) {
                const sortBySelector = $('#sortBy');
                const sortOrderSelector = $('#sortOrder');
                const currentSortBy = sortBySelector.val();
                let sortOrder = sortOrderSelector.val();

                if (currentSortBy === sortBy) {
                    sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
                }
                else {
                    sortOrder = 'asc';
                }

                sortBySelector.val(sortBy);
                sortOrderSelector.val(sortOrder);

                $('#filterForm').submit();
            };
        });
    </script>
<div class="button-container">
    <button type="button" class="base-button" onclick="location.href='@Url.Action("Index", "Home")'">
        Main page
    </button>

    @if (Model.ShowDeleteAndAddButtons && (isAdmin || isDirector || isManager))
    {
    <button type="button" class="base-button" onclick="location.href='@Url.Action("CreateTask", "Task", new { projectId = Model.ProjectId })'">
        Add new
    </button>
    }
</div>
</body>
</html>