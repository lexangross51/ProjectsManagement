@using Microsoft.AspNetCore.Identity
@using Projects.DataAccess.Database
@using Projects.DataAccess.Models
@model Projects.Logic.Tasks.Queries.GetTask.TaskDetailsVm
@inject UserManager<ApplicationUser> UserManager;
@{ 
    Layout = null;
    var user = await UserManager.GetUserAsync(User);
    var isAdmin = user != null && await UserManager.IsInRoleAsync(user, Roles.Admin);
    var isDirector = user != null && await UserManager.IsInRoleAsync(user, Roles.Director);
    var isManager = user != null && await UserManager.IsInRoleAsync(user, Roles.Manager);
}

<!DOCTYPE html>

<html lang="en">
<head>
    <title>Task details</title>
</head>
<body>
<h2>@Model.TaskName</h2>

<p><strong>Priority: </strong> @Model.Priority</p>
<p><strong>Status: </strong> @Model.Status</p>
<p><strong>Author: </strong> @Model.Author.FullName</p>
<p><strong>Project: </strong> @Model.Project.ProjectName</p>

@if (Model.Executor != null)
{
    <p><strong>Executor: </strong> @Model.Executor.FullName</p>
}

<button type="button" onclick="location.href='@Url.Action("Tasks", "Task")'">Task list</button>
<button type="button" onclick="location.href='@Url.Action("UpdateTask", "Task", new {id = Model.Id})'">Edit</button>

@if (isAdmin || isDirector || isManager)
{
    using (Html.BeginForm("DeleteTask", "Task", new { id = Model.Id }, FormMethod.Post))
    {
        <button type="submit" onclick="return confirm('Are you sure you want to delete this project?')">Delete</button>
    }   
}

</body>
</html>