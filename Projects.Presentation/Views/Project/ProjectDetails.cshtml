@using Microsoft.AspNetCore.Identity
@using Projects.DataAccess.Database
@using Projects.DataAccess.Models
@model Projects.Logic.Projects.Queries.GetProject.ProjectDetailsVm
@inject UserManager<ApplicationUser> UserManager
@{
    Layout = null;
    var user = await UserManager.GetUserAsync(User);
    bool isAdmin = user != null && await UserManager.IsInRoleAsync(user, Roles.Admin);
    bool isDirector = user != null && await UserManager.IsInRoleAsync(user, Roles.Director);
    bool isManager = user != null && await UserManager.IsInRoleAsync(user, Roles.Manager);
}

<!DOCTYPE html>

<html lang="en">
<head>
    <title>Project details</title>
    <link rel="stylesheet" type="text/css" href="~/css/styles.css"/>
</head>
<body>
<div class="box-container">
    <h1>@Model.ProjectName</h1>

    <p>
        <strong>Company customer: </strong> @Model.CompanyCustomer
    </p>
    <p>
        <strong>Company executor: </strong> @Model.CompanyExecutor
    </p>
    <p>
        <strong>Priority: </strong> @Model.Priority
    </p>
    <p>
        <strong>Date start: </strong> @Model.DateStart
    </p>
    <p>
        <strong>Date end: </strong> @Model.DateEnd
    </p>

    @if (Model.Manager != null)
    {
        <p>
            <strong>Manager: </strong> @Model.Manager.FullName
        </p>
    }

    @if (Model.Executors != null && Model.Executors.Any())
    {
        <p>
            <strong>Executors:</strong>
        </p>
        
        <div class="section">
            <ul class="custom-list">
                @foreach (var e in Model.Executors)
                {
                    <li>@e.FullName</li>
                }
            </ul>
        </div>
    }

    <div class="button-container">
        <button type="button" class="base-button" onclick="location.href='@Url.Action("Projects", "Project")'">
            Project list
        </button>
        <button type="button" class="base-button" onclick="location.href='@Url.Action("TasksForProject", "Task", new { projectId = Model.Id })'">
            View tasks
        </button>

        @if (isAdmin || isDirector || isManager)
        {
            <button type="button" class="base-button" onclick="location.href='@Url.Action("UpdateProject", "Project", new { id = Model.Id })'">
                Edit
            </button>
        }

        @if (isAdmin || isDirector)
        {
            @using (Html.BeginForm("DeleteProject", "Project", new { id = Model.Id }, FormMethod.Post))
            {
                <button type="submit" class="base-button" onclick="return confirm('Are you sure you want to delete this project?')">
                    Delete
                </button>
            }
        }
    </div>
</div>
</body>
</html>